project okui ;

path-constant NEEDS_PATH : needs ;

lib libpng       : needs//libpng        : <name>png <link>static ;
lib libturbojpeg : needs//libjpeg-turbo : <name>turbojpeg ;
lib libiconv     :                      : <name>iconv ;
alias utf8       : needs//utf8 ;

rule okui-frameworks ( properties * ) {
    if <target-os>iphone in $(properties) || <target-os>appletv in $(properties) || <target-os>darwin in $(properties) {
        local result ;
        result += <framework>CoreFoundation ;
        result += <framework>Foundation ;

        if <target-os>darwin in $(properties) {
            result += <framework>OpenGL ;
        }

        return $(result) ;
    }
}

lib GL     : : <link>shared ;
lib m      : : <link>shared ;
lib GLESv2 : : <link>shared ;

alias objc : : : :
    <target-os>darwin:<cxxflags>"-x objective-c++"
    <target-os>iphone:<cxxflags>"-x objective-c++"
    <target-os>appletv:<cxxflags>"-x objective-c++"
    <target-os>darwin:<cflags>-fobjc-arc
    <target-os>iphone:<cflags>-fobjc-arc
    <target-os>appletv:<cflags>-fobjc-arc
;

alias jshackle  : $(NEEDS_PATH)//jshackle ;

local PKG_CONFIG_PATH = [ modules.peek project-config : PKG_CONFIG_PATH ] ;
if ($(PKG_CONFIG_PATH)) {
    local cflags = [ SHELL "PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) pkg-config scraps --cflags" : strip-eol ] ;
    local ldflags = [ SHELL "PKG_CONFIG_PATH=$(PKG_CONFIG_PATH) pkg-config scraps --libs --static" : strip-eol ] ;
    alias scraps : : : : <cflags>$(cflags) <linkflags>$(ldflags) ;
} else {
    alias scraps : ../scraps//scraps ;
}

lib libSDL2 : needs//sdl2
:
    <name>SDL2
: :
    [ conditional <target-os>darwin :
        <framework>AudioUnit
        <framework>Carbon
        <framework>Cocoa
        <framework>CoreAudio
        <framework>ForceFeedback
        <framework>Foundation
        <framework>IOKit
        <source>libiconv
    ]

    [ conditional <target-os>appletv :
        <framework>CoreAudio
        <framework>CoreGraphics
        <framework>GameController
        <framework>QuartzCore
        <framework>UIKit
    ]

    [ conditional <target-os>iphone :
        <framework>CoreAudio
        <framework>CoreGraphics
        <framework>CoreMotion
        <framework>GameController
        <framework>QuartzCore
        <framework>UIKit
    ]
;

lib okui :
    [ glob-tree-ex src : *.cpp ]
    scraps
    libpng
    libturbojpeg
    libSDL2
    jshackle
    objc
    utf8
:
    <include>include
    <cxxflags>"-std=c++1y"
    <link>static
    [ conditional <target-os>linux :
        <source>GL
        <source>m
    ]
: :
    <include>include
    <cxxflags>"-std=c++1y"
    <conditional>@okui-frameworks
    <target-os>android:<source>GLESv2
;

import package ;

package.install install-lib : <install-source-root>include : : okui : [ glob-tree-ex include : *.h ] ;

path-constant PREFIX : [ option.get prefix : "/usr/local" ] ;
path-constant LIB : [ option.get libdir : $(PREFIX)/lib ] ;
path-constant PKG_CONFIG : $(LIB)/pkgconfig ;

make okui.pc : Jamroot : @pkgconfig ;
rule pkgconfig ( targets * : sources * : properties * ) {
    if <toolset>darwin in $(properties) {
        PRIVATE_LIBS on $(targets) = -framework Foundation -framework OpenGL ;
    }
}
actions pkgconfig {
cat > $(<) <<- EOM
prefix=\${pcfiledir}/../..
exec_prefix=\${prefix}
libdir=\${exec_prefix}/lib
includedir=\${exec_prefix}/include

Name: okui
Version: 0
Description: Okay UI library
Requires: scraps libpng libturbojpeg sdl2 utf8
Libs: -L\${libdir} -lokui
Libs.private: $(PRIVATE_LIBS)
Cflags: -I\${includedir}
EOM
}

install install-pkgconfig : okui.pc : <location>$(PKG_CONFIG) ;

install install-android : [ glob-tree-ex android : *.java *.gradle ] : <location>$(PREFIX)/share/okui <install-source-root>android ;

alias install :
    install-lib
    install-pkgconfig
    $(NEEDS_PATH)//install-libpng
    $(NEEDS_PATH)//install-libjpeg-turbo
    $(NEEDS_PATH)//install-sdl2
    $(NEEDS_PATH)//install-utf8
:
    <target-os>android:<source>:install-android
;

explicit install install-lib install-pkgconfig install-android ;
